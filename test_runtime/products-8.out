
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.002 ms (setup)        0.002 (*)        0.001 (^)        0.001 (&)        0.001 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*)        0.002 (^)        0.002 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.006 ms (setup)        0.008 (*)        0.005 (^)        0.006 (&)        0.005 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.025 (*)        0.015 (^)        0.016 (&)        0.015 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.016 ms (setup)        0.084 (*)        0.037 (^)        0.046 (&)        0.035 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.031 ms (setup)        0.346 (*)        0.100 (^)        0.157 (&)        0.108 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.074 ms (setup)        1.190 (*)        0.310 (^)        0.452 (&)        0.293 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.146 ms (setup)        3.300 (*)        0.975 (^)        1.448 (&)        0.906 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.004 ms (setup)        0.001 (*)        0.009 (^)        0.007 (&)        0.009 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.014 ms (setup)        0.000 (*)        0.019 (^)        0.012 (&)        0.019 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.025 ms (setup)        0.001 (*)        0.047 (^)        0.045 (&)        0.047 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.042 ms (setup)        0.001 (*)        0.100 (^)        0.091 (&)        0.100 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.108 ms (setup)        0.003 (*)        0.290 (^)        0.296 (&)        0.288 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.217 ms (setup)        0.002 (*)        0.638 (^)        0.653 (&)        0.631 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.658 ms (setup)        0.012 (*)        1.657 (^)        2.111 (&)        1.647 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.000 ms (setup)        0.012 (*)        3.500 (^)        4.100 (&)        3.514 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.002 ms (setup)        0.002 (*)        0.001 (^)        0.001 (&)        0.002 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.003 ms (setup)        0.003 (*)        0.003 (^)        0.002 (&)        0.003 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.009 (*)        0.006 (^)        0.006 (&)        0.006 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.008 ms (setup)        0.028 (*)        0.015 (^)        0.018 (&)        0.015 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.017 ms (setup)        0.092 (*)        0.040 (^)        0.050 (&)        0.040 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.032 ms (setup)        0.388 (*)        0.126 (^)        0.170 (&)        0.123 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.078 ms (setup)        1.337 (*)        0.326 (^)        0.481 (&)        0.339 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.150 ms (setup)        3.300 (*)        0.989 (^)        1.525 (&)        1.000 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.312 ms (setup)        8.800 (*)        3.464 (^)        5.300 (&)        3.607 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.660 ms (setup)       17.500 (*)       11.800 (^)       17.800 (&)       12.600 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.300 ms (setup)       71.429 (*)       43.000 (^)       64.375 (&)       46.000 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.739 ms (setup)      102.222 (*)      151.667 (^)      210.000 (&)      153.333 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.598 ms (setup)      340.000 (*)      475.000 (^)      640.000 (&)      470.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.500 ms (setup)      480.000 (*)     1510.000 (^)     2050.000 (&)     1530.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       26.667 ms (setup)     1600.000 (*)     4490.000 (^)     6040.000 (&)     4440.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       53.125 ms (setup)     2280.000 (*)    14350.000 (^)    19550.000 (&)    14900.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.001 (*)        0.010 (^)        0.008 (&)        0.010 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*)        0.021 (^)        0.014 (&)        0.020 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.028 ms (setup)        0.001 (*)        0.052 (^)        0.049 (&)        0.052 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.046 ms (setup)        0.001 (*)        0.109 (^)        0.098 (&)        0.109 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.114 ms (setup)        0.003 (*)        0.306 (^)        0.313 (&)        0.307 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.226 ms (setup)        0.003 (*)        0.671 (^)        0.690 (&)        0.672 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.683 ms (setup)        0.013 (*)        1.700 (^)        2.234 (&)        1.769 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.105 ms (setup)        0.013 (*)        3.800 (^)        4.388 (&)        3.891 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.661 ms (setup)        0.092 (*)       11.900 (^)       14.100 (&)       12.200 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.700 ms (setup)        0.092 (*)       28.485 (^)       36.400 (&)       29.800 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       13.800 ms (setup)        0.769 (*)      111.111 (^)      135.714 (&)      113.750 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       42.000 ms (setup)        0.760 (*)      273.333 (^)      333.333 (&)      263.333 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       83.636 ms (setup)        5.843 (*)      790.000 (^)      970.000 (&)      780.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      196.000 ms (setup)        5.800 (*)     2100.000 (^)     2720.000 (&)     2070.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      430.000 ms (setup)       55.500 (*)     6150.000 (^)     8220.000 (&)     5990.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      930.000 ms (setup)       55.000 (*)    18280.000 (^)    27160.000 (&)    17730.000 (%) 
