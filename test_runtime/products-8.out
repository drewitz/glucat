
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.009 ms (setup)        0.004 (*)        0.003 (^)        0.003 (&)        0.004 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.010 ms (setup)        0.007 (*)        0.007 (^)        0.005 (&)        0.006 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.014 ms (setup)        0.021 (*)        0.015 (^)        0.016 (&)        0.016 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.015 ms (setup)        0.026 (*)        0.015 (^)        0.017 (&)        0.014 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.020 ms (setup)        0.091 (*)        0.040 (^)        0.053 (&)        0.037 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.031 ms (setup)        0.372 (*)        0.123 (^)        0.168 (&)        0.109 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.073 ms (setup)        1.246 (*)        0.318 (^)        0.474 (&)        0.320 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.150 ms (setup)        3.400 (*)        1.038 (^)        1.560 (&)        1.004 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.004 ms (setup)        0.001 (*)        0.009 (^)        0.007 (&)        0.009 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.014 ms (setup)        0.001 (*)        0.019 (^)        0.012 (&)        0.018 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.025 ms (setup)        0.001 (*)        0.048 (^)        0.045 (&)        0.048 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.042 ms (setup)        0.001 (*)        0.103 (^)        0.092 (&)        0.102 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.111 ms (setup)        0.003 (*)        0.298 (^)        0.300 (&)        0.298 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.224 ms (setup)        0.003 (*)        0.658 (^)        0.673 (&)        0.649 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.686 ms (setup)        0.012 (*)        1.767 (^)        2.247 (&)        1.750 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.147 ms (setup)        0.013 (*)        3.839 (^)        4.300 (&)        3.732 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.003 ms (setup)        0.002 (*)        0.002 (^)        0.001 (&)        0.001 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*)        0.003 (^)        0.002 (&)        0.003 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.006 ms (setup)        0.008 (*)        0.006 (^)        0.006 (&)        0.006 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.010 ms (setup)        0.028 (*)        0.016 (^)        0.019 (&)        0.016 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.017 ms (setup)        0.095 (*)        0.041 (^)        0.053 (&)        0.040 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.036 ms (setup)        0.403 (*)        0.134 (^)        0.182 (&)        0.129 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.073 ms (setup)        1.392 (*)        0.338 (^)        0.517 (&)        0.351 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.146 ms (setup)        3.555 (*)        1.063 (^)        1.646 (&)        1.068 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.325 ms (setup)        9.400 (*)        4.000 (^)        5.900 (&)        3.903 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.660 ms (setup)       18.000 (*)       12.600 (^)       19.600 (&)       13.300 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.334 ms (setup)       74.286 (*)       47.000 (^)       71.250 (&)       49.500 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.842 ms (setup)      108.889 (*)      174.000 (^)      237.500 (&)      180.000 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.800 ms (setup)      355.000 (*)      520.000 (^)      730.000 (&)      520.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.800 ms (setup)      495.000 (*)     1670.000 (^)     2260.000 (&)     1700.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       30.303 ms (setup)     1670.000 (*)     5000.000 (^)     6900.000 (&)     5020.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       56.250 ms (setup)     2420.000 (*)    16890.000 (^)    22470.000 (&)    16800.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.004 ms (setup)        0.001 (*)        0.010 (^)        0.007 (&)        0.011 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*)        0.020 (^)        0.014 (&)        0.020 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.028 ms (setup)        0.002 (*)        0.052 (^)        0.048 (&)        0.052 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.047 ms (setup)        0.001 (*)        0.117 (^)        0.100 (&)        0.110 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.116 ms (setup)        0.003 (*)        0.309 (^)        0.322 (&)        0.317 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.231 ms (setup)        0.003 (*)        0.686 (^)        0.712 (&)        0.692 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.734 ms (setup)        0.012 (*)        1.876 (^)        2.369 (&)        1.855 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.159 ms (setup)        0.012 (*)        3.900 (^)        4.600 (&)        4.106 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.900 ms (setup)        0.085 (*)       13.000 (^)       15.000 (&)       13.000 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.800 ms (setup)        0.091 (*)       29.394 (^)       39.200 (&)       29.394 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       14.000 ms (setup)        0.719 (*)      114.444 (^)      142.857 (&)      117.500 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       43.200 ms (setup)        0.707 (*)      283.333 (^)      350.000 (&)      293.333 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       86.667 ms (setup)        5.781 (*)      850.000 (^)     1070.000 (&)      850.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      206.000 ms (setup)        5.700 (*)     2270.000 (^)     3020.000 (&)     2260.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      445.000 ms (setup)       50.000 (*)     6640.000 (^)     9140.000 (&)     6550.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      960.000 ms (setup)       49.500 (*)    19950.000 (^)    29490.000 (&)    19700.000 (%) 
