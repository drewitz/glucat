
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.007 ms (setup)        0.002 (*)        0.002 (^)        0.001 (&)        0.001 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*)        0.002 (^)        0.002 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.008 (*)        0.005 (^)        0.006 (&)        0.005 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.025 (*)        0.014 (^)        0.016 (&)        0.014 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.017 ms (setup)        0.082 (*)        0.036 (^)        0.046 (&)        0.035 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.031 ms (setup)        0.344 (*)        0.114 (^)        0.156 (&)        0.108 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.074 ms (setup)        1.188 (*)        0.306 (^)        0.449 (&)        0.293 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.145 ms (setup)        3.300 (*)        0.969 (^)        1.442 (&)        0.908 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.001 (*)        0.009 (^)        0.006 (&)        0.009 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.014 ms (setup)        0.001 (*)        0.018 (^)        0.012 (&)        0.017 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.026 ms (setup)        0.001 (*)        0.047 (^)        0.044 (&)        0.046 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.000 ms (setup)        0.001 (*)        0.100 (^)        0.089 (&)        0.100 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.109 ms (setup)        0.002 (*)        0.286 (^)        0.294 (&)        0.287 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.218 ms (setup)        0.002 (*)        0.634 (^)        0.647 (&)        0.630 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.658 ms (setup)        0.012 (*)        1.650 (^)        2.100 (&)        1.600 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.062 ms (setup)        0.013 (*)        3.555 (^)        4.086 (&)        3.515 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.002 ms (setup)        0.002 (*)        0.001 (^)        0.001 (&)        0.002 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.003 ms (setup)        0.003 (*)        0.003 (^)        0.002 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.008 (*)        0.006 (^)        0.006 (&)        0.006 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.028 (*)        0.016 (^)        0.017 (&)        0.016 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.017 ms (setup)        0.092 (*)        0.040 (^)        0.051 (&)        0.039 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.033 ms (setup)        0.391 (*)        0.129 (^)        0.174 (&)        0.125 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.079 ms (setup)        1.336 (*)        0.345 (^)        0.483 (&)        0.340 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.152 ms (setup)        3.400 (*)        1.031 (^)        1.520 (&)        1.020 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.317 ms (setup)        9.000 (*)        3.650 (^)        5.400 (&)        3.652 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.662 ms (setup)       18.400 (*)       12.100 (^)       17.800 (&)       12.600 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.346 ms (setup)       72.143 (*)       44.000 (^)       65.000 (&)       47.000 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.757 ms (setup)      101.111 (*)      158.333 (^)      212.500 (&)      161.667 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.600 ms (setup)      345.000 (*)      495.000 (^)      670.000 (&)      490.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.300 ms (setup)      490.000 (*)     1550.000 (^)     2070.000 (&)     1590.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       26.667 ms (setup)     1620.000 (*)     4590.000 (^)     6130.000 (&)     4530.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       53.125 ms (setup)     2300.000 (*)    14650.000 (^)    20060.000 (&)    15120.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.001 (*)        0.010 (^)        0.008 (&)        0.011 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*)        0.021 (^)        0.014 (&)        0.022 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.029 ms (setup)        0.001 (*)        0.053 (^)        0.050 (&)        0.053 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.047 ms (setup)        0.001 (*)        0.112 (^)        0.100 (&)        0.112 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.116 ms (setup)        0.003 (*)        0.315 (^)        0.323 (&)        0.315 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.231 ms (setup)        0.002 (*)        0.600 (^)        0.700 (&)        0.689 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.699 ms (setup)        0.013 (*)        1.700 (^)        2.273 (&)        1.800 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.114 ms (setup)        0.014 (*)        3.930 (^)        4.500 (&)        4.005 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.600 ms (setup)        0.092 (*)       11.900 (^)       14.400 (&)       12.200 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.776 ms (setup)        0.092 (*)       28.800 (^)       37.576 (&)       28.485 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       13.900 ms (setup)        0.771 (*)      110.000 (^)      138.571 (&)      112.222 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       42.000 ms (setup)        0.761 (*)      270.000 (^)      330.000 (&)      270.000 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       84.167 ms (setup)        5.800 (*)      810.000 (^)     1000.000 (&)      800.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      200.000 ms (setup)        5.828 (*)     2130.000 (^)     2800.000 (&)     2130.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      425.000 ms (setup)       55.000 (*)     6210.000 (^)     8350.000 (&)     6070.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      950.000 ms (setup)       55.500 (*)    18570.000 (^)    27390.000 (&)    18120.000 (%) 
