
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.006 ms (setup)        0.002 (*)        0.001 (^)        0.001 (&)        0.001 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*)        0.003 (^)        0.002 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.009 (*)        0.005 (^)        0.006 (&)        0.005 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.028 (*)        0.015 (^)        0.016 (&)        0.014 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.016 ms (setup)        0.091 (*)        0.036 (^)        0.048 (&)        0.035 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.033 ms (setup)        0.365 (*)        0.118 (^)        0.160 (&)        0.108 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.077 ms (setup)        1.270 (*)        0.313 (^)        0.455 (&)        0.297 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.150 ms (setup)        3.379 (*)        0.984 (^)        1.462 (&)        0.916 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.004 ms (setup)        0.000 (*)        0.010 (^)        0.006 (&)        0.009 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.014 ms (setup)        0.001 (*)        0.017 (^)        0.013 (&)        0.018 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.025 ms (setup)        0.000 (*)        0.046 (^)        0.044 (&)        0.046 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.043 ms (setup)        0.000 (*)        0.099 (^)        0.089 (&)        0.100 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.108 ms (setup)        0.002 (*)        0.287 (^)        0.293 (&)        0.286 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.216 ms (setup)        0.002 (*)        0.636 (^)        0.647 (&)        0.626 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.657 ms (setup)        0.012 (*)        1.659 (^)        2.100 (&)        1.647 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.066 ms (setup)        0.013 (*)        3.573 (^)        4.106 (&)        3.524 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.002 ms (setup)        0.002 (*)        0.001 (^)        0.001 (&)        0.002 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.003 ms (setup)        0.003 (*)        0.003 (^)        0.002 (&)        0.003 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.009 (*)        0.006 (^)        0.006 (&)        0.006 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.029 (*)        0.017 (^)        0.019 (&)        0.015 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.017 ms (setup)        0.094 (*)        0.042 (^)        0.050 (&)        0.038 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.035 ms (setup)        0.395 (*)        0.130 (^)        0.174 (&)        0.120 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.078 ms (setup)        1.357 (*)        0.337 (^)        0.492 (&)        0.326 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.153 ms (setup)        3.347 (*)        1.001 (^)        1.536 (&)        0.967 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.320 ms (setup)        8.800 (*)        3.500 (^)        5.400 (&)        3.600 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.643 ms (setup)       18.000 (*)       12.200 (^)       18.200 (&)       12.400 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.301 ms (setup)       72.857 (*)       44.400 (^)       65.625 (&)       45.000 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.689 ms (setup)      103.000 (*)      155.000 (^)      220.000 (&)      161.667 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.578 ms (setup)      335.000 (*)      480.000 (^)      660.000 (&)      490.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.200 ms (setup)      480.000 (*)     1570.000 (^)     2100.000 (&)     1590.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       26.800 ms (setup)     1610.000 (*)     4590.000 (^)     6270.000 (&)     4630.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       54.500 ms (setup)     2270.000 (*)    14670.000 (^)    20090.000 (&)    15350.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*)        0.011 (^)        0.008 (&)        0.010 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*)        0.020 (^)        0.015 (&)        0.021 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.028 ms (setup)        0.001 (*)        0.053 (^)        0.050 (&)        0.051 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.046 ms (setup)        0.001 (*)        0.111 (^)        0.100 (&)        0.110 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.115 ms (setup)        0.002 (*)        0.308 (^)        0.315 (&)        0.307 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.228 ms (setup)        0.002 (*)        0.674 (^)        0.694 (&)        0.671 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.692 ms (setup)        0.014 (*)        1.720 (^)        2.220 (&)        1.727 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.103 ms (setup)        0.014 (*)        3.790 (^)        4.366 (&)        3.795 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.679 ms (setup)        0.092 (*)       11.800 (^)       14.100 (&)       12.000 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.759 ms (setup)        0.093 (*)       28.800 (^)       36.000 (&)       28.800 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       13.400 ms (setup)        0.775 (*)      111.250 (^)      140.000 (&)      113.333 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       42.000 ms (setup)        0.772 (*)      266.667 (^)      333.333 (&)      266.667 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       83.333 ms (setup)        5.985 (*)      790.000 (^)     1000.000 (&)      820.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      198.000 ms (setup)        6.000 (*)     2130.000 (^)     2840.000 (&)     2120.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      420.000 ms (setup)       50.500 (*)     6220.000 (^)     8480.000 (&)     6080.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      930.000 ms (setup)       52.000 (*)    18600.000 (^)    27590.000 (&)    18250.000 (%) 
