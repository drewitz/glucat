
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.007 ms (setup)        0.004 (*)        0.004 (^)        0.003 (&)        0.004 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.009 ms (setup)        0.008 (*)        0.006 (^)        0.005 (&)        0.006 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.013 ms (setup)        0.021 (*)        0.014 (^)        0.015 (&)        0.013 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.020 ms (setup)        0.026 (*)        0.014 (^)        0.017 (&)        0.014 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.018 ms (setup)        0.085 (*)        0.037 (^)        0.048 (&)        0.036 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.030 ms (setup)        0.357 (*)        0.119 (^)        0.163 (&)        0.108 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.073 ms (setup)        1.221 (*)        0.314 (^)        0.461 (&)        0.302 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.142 ms (setup)        3.394 (*)        0.991 (^)        1.488 (&)        0.948 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*)        0.009 (^)        0.006 (&)        0.010 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.013 ms (setup)        0.000 (*)        0.018 (^)        0.012 (&)        0.017 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.026 ms (setup)        0.000 (*)        0.047 (^)        0.045 (&)        0.046 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.042 ms (setup)        0.001 (*)        0.099 (^)        0.090 (&)        0.099 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.110 ms (setup)        0.002 (*)        0.293 (^)        0.299 (&)        0.291 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.222 ms (setup)        0.002 (*)        0.647 (^)        0.666 (&)        0.640 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.684 ms (setup)        0.012 (*)        1.703 (^)        2.201 (&)        1.700 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.093 ms (setup)        0.012 (*)        3.671 (^)        4.221 (&)        3.656 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.003 ms (setup)        0.001 (*)        0.002 (^)        0.001 (&)        0.002 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*)        0.002 (^)        0.003 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.006 ms (setup)        0.008 (*)        0.007 (^)        0.006 (&)        0.005 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.010 ms (setup)        0.027 (*)        0.016 (^)        0.018 (&)        0.015 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.018 ms (setup)        0.094 (*)        0.040 (^)        0.051 (&)        0.039 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.036 ms (setup)        0.400 (*)        0.133 (^)        0.179 (&)        0.123 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.074 ms (setup)        1.366 (*)        0.330 (^)        0.508 (&)        0.321 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.144 ms (setup)        3.497 (*)        1.021 (^)        1.625 (&)        1.000 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.306 ms (setup)        9.200 (*)        3.600 (^)        5.600 (&)        3.583 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.643 ms (setup)       18.800 (*)       12.600 (^)       19.400 (&)       12.900 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.303 ms (setup)       72.500 (*)       45.500 (^)       68.571 (&)       47.500 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.723 ms (setup)      104.000 (*)      163.333 (^)      225.000 (&)      163.333 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.800 ms (setup)      350.000 (*)      490.000 (^)      680.000 (&)      505.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.500 ms (setup)      500.000 (*)     1590.000 (^)     2160.000 (&)     1620.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       27.576 ms (setup)     1640.000 (*)     4730.000 (^)     6490.000 (&)     4810.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       54.800 ms (setup)     2350.000 (*)    15220.000 (^)    21050.000 (&)    15990.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*)        0.011 (^)        0.007 (&)        0.011 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*)        0.020 (^)        0.015 (&)        0.021 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.029 ms (setup)        0.001 (*)        0.053 (^)        0.050 (&)        0.054 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.047 ms (setup)        0.000 (*)        0.000 (^)        0.102 (&)        0.112 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.117 ms (setup)        0.002 (*)        0.313 (^)        0.323 (&)        0.312 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.233 ms (setup)        0.002 (*)        0.700 (^)        0.713 (&)        0.687 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.714 ms (setup)        0.012 (*)        1.816 (^)        2.332 (&)        1.817 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.152 ms (setup)        0.012 (*)        3.997 (^)        4.600 (&)        3.900 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.700 ms (setup)        0.082 (*)       12.200 (^)       14.600 (&)       12.200 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.900 ms (setup)        0.082 (*)       29.394 (^)       38.400 (&)       29.091 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       14.200 ms (setup)        0.703 (*)      113.333 (^)      142.857 (&)      115.000 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       44.000 ms (setup)        0.701 (*)      276.667 (^)      345.000 (&)      276.667 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       86.667 ms (setup)        5.700 (*)      830.000 (^)     1050.000 (&)      830.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      208.000 ms (setup)        5.766 (*)     2210.000 (^)     2980.000 (&)     2180.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      435.000 ms (setup)       52.000 (*)     6430.000 (^)     8780.000 (&)     6330.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      960.000 ms (setup)       52.000 (*)    19130.000 (^)    28890.000 (&)    18900.000 (%) 
