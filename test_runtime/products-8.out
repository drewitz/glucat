
framed_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.006 ms (setup)        0.004 (*)        0.003 (^)        0.002 (&)        0.003 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.008 ms (setup)        0.007 (*)        0.006 (^)        0.004 (&)        0.005 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.012 ms (setup)        0.018 (*)        0.013 (^)        0.006 (&)        0.005 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.009 ms (setup)        0.024 (*)        0.013 (^)        0.016 (&)        0.012 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.016 ms (setup)        0.082 (*)        0.034 (^)        0.045 (&)        0.033 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.033 ms (setup)        0.347 (*)        0.120 (^)        0.163 (&)        0.111 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.064 ms (setup)        1.185 (*)        0.310 (^)        0.453 (&)        0.299 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.123 ms (setup)        3.900 (*)        0.953 (^)        1.450 (&)        0.900 (%) 

matrix_multi<float,-4,4>
Clifford algebra products test:
{-4,-3,-2,-1,1,2,3,4} * {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} ^ {-4,-3,-2,-1,1,2,3,4} == 0
{-4,-3,-2,-1,1,2,3,4} & {-4,-3,-2,-1,1,2,3,4} == 1
{-4,-3,-2,-1,1,2,3,4} % {-4,-3,-2,-1,1,2,3,4} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*)        0.010 (^)        0.007 (&)        0.009 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.015 ms (setup)        0.001 (*)        0.018 (^)        0.013 (&)        0.018 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.027 ms (setup)        0.001 (*)        0.050 (^)        0.047 (&)        0.050 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.046 ms (setup)        0.000 (*)        0.106 (^)        0.095 (&)        0.105 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.118 ms (setup)        0.003 (*)        0.323 (^)        0.329 (&)        0.322 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.242 ms (setup)        0.002 (*)        0.706 (^)        0.724 (&)        0.698 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.600 ms (setup)        0.008 (*)        2.000 (^)        2.140 (&)        1.994 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.275 ms (setup)        0.008 (*)        4.100 (^)        4.700 (&)        4.150 (%) 

framed_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.003 ms (setup)        0.002 (*)        0.001 (^)        0.002 (&)        0.001 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.003 ms (setup)        0.004 (*)        0.002 (^)        0.002 (&)        0.002 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.009 (*)        0.005 (^)        0.005 (&)        0.006 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.008 ms (setup)        0.027 (*)        0.014 (^)        0.017 (&)        0.013 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.015 ms (setup)        0.091 (*)        0.036 (^)        0.050 (&)        0.035 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.034 ms (setup)        0.392 (*)        0.123 (^)        0.173 (&)        0.119 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.064 ms (setup)        1.200 (*)        0.296 (^)        0.483 (&)        0.306 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.127 ms (setup)        3.886 (*)        0.896 (^)        1.553 (&)        0.950 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.273 ms (setup)       10.303 (*)        3.241 (^)        5.486 (&)        3.283 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.553 ms (setup)       20.000 (*)       10.800 (^)       18.400 (&)       11.800 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.117 ms (setup)       72.857 (*)       42.000 (^)       67.143 (&)       45.600 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.308 ms (setup)      104.000 (*)      160.000 (^)      215.000 (&)      160.000 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =        4.836 ms (setup)      340.000 (*)      490.000 (^)      680.000 (&)      500.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =       10.700 ms (setup)      490.000 (*)     1580.000 (^)     2150.000 (&)     1610.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =       23.636 ms (setup)     1600.000 (*)     4690.000 (^)     6320.000 (&)     4790.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =       47.600 ms (setup)     2340.000 (*)    15000.000 (^)    20440.000 (&)    15750.000 (%) 

matrix_multi<double>
Clifford algebra products test:
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} * {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} ^ {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 0
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} & {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1
{-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} % {-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.006 ms (setup)        0.000 (*)        0.012 (^)        0.008 (&)        0.012 (%) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.017 ms (setup)        0.000 (*)        0.022 (^)        0.015 (&)        0.023 (%) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.031 ms (setup)        0.000 (*)        0.058 (^)        0.055 (&)        0.059 (%) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.052 ms (setup)        0.000 (*)        0.121 (^)        0.109 (&)        0.121 (%) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.130 ms (setup)        0.002 (*)        0.349 (^)        0.359 (&)        0.350 (%) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.261 ms (setup)        0.002 (*)        0.738 (^)        0.777 (&)        0.742 (%) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.660 ms (setup)        0.010 (*)        2.012 (^)        2.100 (&)        2.033 (%) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.287 ms (setup)        0.009 (*)        4.289 (^)        4.917 (&)        4.351 (%) 
Cl( 5, 4) in Cl( 5, 4) CPU =        3.060 ms (setup)        0.058 (*)       12.900 (^)       15.600 (&)       13.000 (%) 
Cl( 5, 5) in Cl( 5, 5) CPU =        6.600 ms (setup)        0.058 (*)       29.394 (^)       39.200 (&)       30.303 (%) 
Cl( 6, 5) in Cl( 6, 5) CPU =       15.700 ms (setup)        0.464 (*)      106.667 (^)      138.571 (&)      110.000 (%) 
Cl( 6, 6) in Cl( 6, 6) CPU =       42.000 ms (setup)        0.463 (*)      270.000 (^)      336.667 (&)      270.000 (%) 
Cl( 7, 6) in Cl( 7, 6) CPU =       86.364 ms (setup)        4.963 (*)      810.000 (^)     1000.000 (&)      810.000 (%) 
Cl( 7, 7) in Cl( 7, 7) CPU =      204.000 ms (setup)        4.742 (*)     2150.000 (^)     2790.000 (&)     2140.000 (%) 
Cl( 8, 7) in Cl( 8, 7) CPU =      415.000 ms (setup)       38.400 (*)     6280.000 (^)     8490.000 (&)     6230.000 (%) 
Cl( 8, 8) in Cl( 8, 8) CPU =      940.000 ms (setup)       37.600 (*)    18900.000 (^)    27660.000 (&)    18580.000 (%) 
