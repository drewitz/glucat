
framed_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.054 ms (setup)        0.029 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.023 ms (setup)        0.017 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.027 ms (setup)        0.034 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.034 ms (setup)        0.092 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.049 ms (setup)        0.299 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.077 ms (setup)        1.120 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.136 ms (setup)        4.223 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.200 ms (setup)        6.300 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.543 ms (setup)       36.000 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =        1.094 ms (setup)       40.000 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =        2.201 ms (setup)      163.333 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =        4.500 ms (setup)      182.000 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =        9.992 ms (setup)      760.000 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =       23.400 ms (setup)      830.000 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =       43.200 ms (setup)     3290.000 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =       97.000 ms (setup)     3830.000 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =      180.000 ms (setup)    14480.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =      405.000 ms (setup)    17390.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =      920.000 ms (setup)    67640.000 (*) 
Cl(10,10) in Cl(10,10) CPU =     2090.000 ms (setup)    78860.000 (*) 
Cl(11,10) in Cl(11,10) CPU =     4760.000 ms (setup)   321750.000 (*) 
Cl(11,11) in Cl(11,11) CPU =    16540.000 ms (setup)   379910.000 (*) 

matrix_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.012 ms (setup)        0.001 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.036 ms (setup)        0.000 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.067 ms (setup)        0.001 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.109 ms (setup)        0.001 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.354 ms (setup)        0.003 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.674 ms (setup)        0.003 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        2.369 ms (setup)        0.018 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        2.904 ms (setup)        0.018 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =       10.240 ms (setup)        0.102 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =       22.600 ms (setup)        0.101 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =       55.500 ms (setup)        0.717 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =       99.091 ms (setup)        0.704 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =      247.500 ms (setup)        7.700 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =      440.000 ms (setup)        7.690 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =     1120.000 ms (setup)       58.750 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =     1940.000 ms (setup)       58.125 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =     5090.000 ms (setup)      530.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =     8760.000 ms (setup)      520.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =    23930.000 ms (setup)     4230.000 (*) 
Cl(10,10) in Cl(10,10) CPU =    40010.000 ms (setup)     4260.000 (*) 
Cl(11,10) in Cl(11,10) CPU =   119360.000 ms (setup)    33470.000 (*) 
Cl(11,11) in Cl(11,11) CPU =   190670.000 ms (setup)    33460.000 (*) 
