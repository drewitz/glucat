
framed_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.008 ms (setup)        0.004 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.009 ms (setup)        0.008 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.013 ms (setup)        0.022 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.025 ms (setup)        0.036 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.018 ms (setup)        0.094 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.034 ms (setup)        0.389 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.071 ms (setup)        1.359 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.140 ms (setup)        3.400 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.298 ms (setup)        9.091 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.627 ms (setup)       18.400 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.274 ms (setup)       72.500 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.650 ms (setup)      103.000 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.523 ms (setup)      345.000 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.400 ms (setup)      485.000 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =       27.273 ms (setup)     1610.000 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =       53.125 ms (setup)     2290.000 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =      117.778 ms (setup)     7730.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =      280.000 ms (setup)    10830.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =      485.000 ms (setup)    36790.000 (*) 
Cl(10,10) in Cl(10,10) CPU =      840.000 ms (setup)    50110.000 (*) 
Cl(11,10) in Cl(11,10) CPU =     1370.000 ms (setup)   175570.000 (*) 
Cl(11,11) in Cl(11,11) CPU =     2970.000 ms (setup)   235860.000 (*) 

matrix_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.017 ms (setup)        0.001 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.030 ms (setup)        0.000 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.049 ms (setup)        0.001 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.118 ms (setup)        0.003 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.236 ms (setup)        0.002 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.712 ms (setup)        0.012 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.137 ms (setup)        0.012 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.728 ms (setup)        0.100 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.963 ms (setup)        0.082 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =       14.200 ms (setup)        0.699 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =       42.800 ms (setup)        0.698 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =       84.167 ms (setup)        5.600 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =      200.000 ms (setup)        5.500 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =      410.000 ms (setup)       51.500 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =      940.000 ms (setup)       52.000 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =     2220.000 ms (setup)      530.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =     4580.000 ms (setup)      530.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =    12080.000 ms (setup)     4230.000 (*) 
Cl(10,10) in Cl(10,10) CPU =    22310.000 ms (setup)     4230.000 (*) 
Cl(11,10) in Cl(11,10) CPU =    66990.000 ms (setup)    30990.000 (*) 
Cl(11,11) in Cl(11,11) CPU =   111820.000 ms (setup)    31020.000 (*) 
