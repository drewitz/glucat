
framed_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.002 ms (setup)        0.002 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.004 ms (setup)        0.003 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.005 ms (setup)        0.008 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.010 ms (setup)        0.027 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.018 ms (setup)        0.092 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.031 ms (setup)        0.385 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.077 ms (setup)        1.300 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        0.152 ms (setup)        3.396 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =        0.323 ms (setup)        8.800 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =        0.659 ms (setup)       17.600 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =        1.300 ms (setup)       75.000 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =        2.783 ms (setup)      104.444 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =        5.900 ms (setup)      350.000 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =       12.600 ms (setup)      490.000 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =       27.273 ms (setup)     1650.000 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =       54.400 ms (setup)     2340.000 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =      115.556 ms (setup)     7870.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =      280.000 ms (setup)    11090.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =      490.000 ms (setup)    37710.000 (*) 
Cl(10,10) in Cl(10,10) CPU =      870.000 ms (setup)    50920.000 (*) 
Cl(11,10) in Cl(11,10) CPU =     1440.000 ms (setup)   178830.000 (*) 
Cl(11,11) in Cl(11,11) CPU =     3080.000 ms (setup)   238200.000 (*) 

matrix_multi<double>
Clifford algebra squaring test:
{-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} * {-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10,11} == 1

Cl( 1, 0) in Cl( 1, 0) CPU =        0.005 ms (setup)        0.000 (*) 
Cl( 1, 1) in Cl( 1, 1) CPU =        0.016 ms (setup)        0.001 (*) 
Cl( 2, 1) in Cl( 2, 1) CPU =        0.028 ms (setup)        0.001 (*) 
Cl( 2, 2) in Cl( 2, 2) CPU =        0.046 ms (setup)        0.001 (*) 
Cl( 3, 2) in Cl( 3, 2) CPU =        0.115 ms (setup)        0.002 (*) 
Cl( 3, 3) in Cl( 3, 3) CPU =        0.227 ms (setup)        0.003 (*) 
Cl( 4, 3) in Cl( 4, 3) CPU =        0.683 ms (setup)        0.013 (*) 
Cl( 4, 4) in Cl( 4, 4) CPU =        1.100 ms (setup)        0.013 (*) 
Cl( 5, 4) in Cl( 5, 4) CPU =        2.681 ms (setup)        0.093 (*) 
Cl( 5, 5) in Cl( 5, 5) CPU =        5.805 ms (setup)        0.092 (*) 
Cl( 6, 5) in Cl( 6, 5) CPU =       13.900 ms (setup)        0.765 (*) 
Cl( 6, 6) in Cl( 6, 6) CPU =       43.000 ms (setup)        0.762 (*) 
Cl( 7, 6) in Cl( 7, 6) CPU =       87.500 ms (setup)        6.357 (*) 
Cl( 7, 7) in Cl( 7, 7) CPU =      202.000 ms (setup)        6.262 (*) 
Cl( 8, 7) in Cl( 8, 7) CPU =      420.000 ms (setup)       47.000 (*) 
Cl( 8, 8) in Cl( 8, 8) CPU =      940.000 ms (setup)       55.500 (*) 
Cl( 9, 8) in Cl( 9, 8) CPU =     2290.000 ms (setup)      580.000 (*) 
Cl( 9, 9) in Cl( 9, 9) CPU =     4610.000 ms (setup)      570.000 (*) 
Cl(10, 9) in Cl(10, 9) CPU =    12510.000 ms (setup)     4540.000 (*) 
Cl(10,10) in Cl(10,10) CPU =    23130.000 ms (setup)     4550.000 (*) 
Cl(11,10) in Cl(11,10) CPU =    66040.000 ms (setup)    31610.000 (*) 
Cl(11,11) in Cl(11,11) CPU =   111640.000 ms (setup)    31600.000 (*) 
